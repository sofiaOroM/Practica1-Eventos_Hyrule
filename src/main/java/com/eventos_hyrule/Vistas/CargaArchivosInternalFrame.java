/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.eventos_hyrule.Vistas;

import com.eventos_hyrule.funciones.ProcesadorArchivosService;
import java.io.File;
import java.nio.file.Path;
import java.sql.Connection;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import javax.swing.JFileChooser;
import javax.swing.*;

/**
 *
 * @author sofia
 */
public class CargaArchivosInternalFrame extends javax.swing.JInternalFrame {
/*    private Connection connection;
    private ScheduledExecutorService executor;
    /**
     * Creates new form CargaArchivosInternalFrame
     */
 /*   public CargaArchivosInternalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
/*    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelArchivos = new javax.swing.JPanel();
        lbArchivoEntrada = new javax.swing.JLabel();
        lbDirectorioSalida = new javax.swing.JLabel();
        lbVelocidad = new javax.swing.JLabel();
        txtArchivoEntrada = new javax.swing.JTextField();
        txtDirectorioSalida = new javax.swing.JTextField();
        spnVelocidad = new javax.swing.JSpinner();
        btnArchivoEntrada = new javax.swing.JButton();
        btnDirectorioSalida = new javax.swing.JButton();
        panelBotones = new javax.swing.JPanel();
        btnIniciar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();

        lbArchivoEntrada.setText("Archivo de entrada:");

        lbDirectorioSalida.setText("Directorio de Salida:");

        lbVelocidad.setText("Velocidad:");

        txtArchivoEntrada.setText("jTextField1");
        txtArchivoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArchivoEntradaActionPerformed(evt);
            }
        });

        txtDirectorioSalida.setText("jTextField1");

        btnArchivoEntrada.setText("Examinar...");
        btnArchivoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivoEntradaActionPerformed(evt);
            }
        });

        btnDirectorioSalida.setText("Examinar...");
        btnDirectorioSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDirectorioSalidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelArchivosLayout = new javax.swing.GroupLayout(panelArchivos);
        panelArchivos.setLayout(panelArchivosLayout);
        panelArchivosLayout.setHorizontalGroup(
            panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivosLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelArchivosLayout.createSequentialGroup()
                        .addGroup(panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDirectorioSalida)
                            .addComponent(lbVelocidad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spnVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDirectorioSalida)))
                    .addGroup(panelArchivosLayout.createSequentialGroup()
                        .addComponent(lbArchivoEntrada)
                        .addGap(18, 18, 18)
                        .addComponent(txtArchivoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDirectorioSalida, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(btnArchivoEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        panelArchivosLayout.setVerticalGroup(
            panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArchivosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbArchivoEntrada)
                    .addComponent(txtArchivoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArchivoEntrada))
                .addGap(18, 18, 18)
                .addGroup(panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDirectorioSalida)
                    .addComponent(txtDirectorioSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDirectorioSalida))
                .addGap(18, 18, 18)
                .addGroup(panelArchivosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbVelocidad)
                    .addComponent(spnVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIniciar)
                    .addComponent(btnCancelar))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        txtLog.setRows(5);
        jScrollPane1.setViewportView(txtLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelArchivos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelBotones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtArchivoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArchivoEntradaActionPerformed

    }//GEN-LAST:event_txtArchivoEntradaActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
 /*       String archivoEntrada = txtArchivoEntrada.getText();
        String directorioSalida = txtDirectorioSalida.getText();
        int velocidad = (Integer) spnVelocidad.getValue();
        
        if (archivoEntrada.isEmpty() || directorioSalida.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "Debe seleccionar un archivo de entrada y un directorio de salida", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        File archivo = new File(archivoEntrada);
        File directorio = new File(directorioSalida);
        
        if (!archivo.exists() || !archivo.isFile()) {
            JOptionPane.showMessageDialog(this, 
                "El archivo de entrada no existe o no es válido", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (!directorio.exists() || !directorio.isDirectory()) {
            JOptionPane.showMessageDialog(this, 
                "El directorio de salida no existe o no es válido", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Deshabilitar controles durante el procesamiento
        setControlesHabilitados(false);
        txtLog.setText(""); // Limpiar log
        
        // Ejecutar en un hilo separado
            new Thread(() -> {
                try {
                    Path archivoPath = Path.of(archivoEntrada);
                    Path directorioPath = Path.of(directorioSalida);

                    ProcesadorArchivosService procesador = new ProcesadorArchivosService(
                        connection, 
                        directorioPath, 
                        velocidad
                    );

                    String resultado = procesador.procesarArchivo(archivoPath);

                    SwingUtilities.invokeLater(() -> {
                        txtLog.setText(resultado);
                        JOptionPane.showMessageDialog(this, 
                            "Procesamiento completado exitosamente", 
                            "Éxito", JOptionPane.INFORMATION_MESSAGE);
                        setControlesHabilitados(true);
                    });

                } catch (Exception e) {
                    SwingUtilities.invokeLater(() -> {
                        txtLog.append("ERROR: " + e.getMessage() + "\n");
                        JOptionPane.showMessageDialog(this, 
                            "Error durante el procesamiento: " + e.getMessage(), 
                            "Error", JOptionPane.ERROR_MESSAGE);
                        setControlesHabilitados(true);
                    });
                }
            }).start();     
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        ejecutarAccionCancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void ejecutarAccionCancelar(){
        if (executor != null && !executor.isShutdown()) {
            executor.shutdownNow();
            agregarLog("Procesamiento cancelado por el usuario");
        }
        setControlesHabilitados(true);
    }
    private void btnArchivoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchivoEntradaActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar archivo de instrucciones");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            txtArchivoEntrada.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnArchivoEntradaActionPerformed
    
    
    private void btnDirectorioSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDirectorioSalidaActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar directorio de salida");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            txtDirectorioSalida.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnDirectorioSalidaActionPerformed
   
    private void setControlesHabilitados(boolean habilitado) {
        txtArchivoEntrada.setEnabled(habilitado);
        txtDirectorioSalida.setEnabled(habilitado);
        spnVelocidad.setEnabled(habilitado);
        btnArchivoEntrada.setEnabled(habilitado);
        btnDirectorioSalida.setEnabled(habilitado);
        btnIniciar.setEnabled(habilitado);
    }
    private void agregarLog(String mensaje) {
        SwingUtilities.invokeLater(() -> {
            txtLog.append(mensaje + "\n");
            txtLog.setCaretPosition(txtLog.getDocument().getLength());
        });
    }

    @Override
    public void dispose() {
        btnCancelarActionPerformed(null);
        super.dispose();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArchivoEntrada;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDirectorioSalida;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbArchivoEntrada;
    private javax.swing.JLabel lbDirectorioSalida;
    private javax.swing.JLabel lbVelocidad;
    private javax.swing.JPanel panelArchivos;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JSpinner spnVelocidad;
    private javax.swing.JTextField txtArchivoEntrada;
    private javax.swing.JTextField txtDirectorioSalida;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables
*/
    }
